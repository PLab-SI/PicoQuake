/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8 */

#ifndef PB_MESSAGES_PB_H_INCLUDED
#define PB_MESSAGES_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* id = 0x01; */
typedef struct _IMUData {
    uint64_t count;
    float acc_x;
    float acc_y;
    float acc_z;
    float gyro_x;
    float gyro_y;
    float gyro_z;
} IMUData;

/* id = 0x02; */
typedef struct _Status {
    uint8_t state;
    float temperature;
    uint32_t missed_samples;
    uint8_t error_code;
} Status;

/* id = 0x03; */
typedef struct _DeviceInfo {
    pb_byte_t unique_id[8];
    pb_byte_t firmware[9];
} DeviceInfo;

/* id = 0x04; */
typedef struct _Command {
    uint8_t state;
    uint8_t filter_config;
    uint8_t data_rate;
    uint8_t acc_range;
    uint8_t gyro_range;
} Command;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define IMUData_init_default                     {0, 0, 0, 0, 0, 0, 0}
#define Status_init_default                      {0, 0, 0, 0}
#define DeviceInfo_init_default                  {{0}, {0}}
#define Command_init_default                     {0, 0, 0, 0, 0}
#define IMUData_init_zero                        {0, 0, 0, 0, 0, 0, 0}
#define Status_init_zero                         {0, 0, 0, 0}
#define DeviceInfo_init_zero                     {{0}, {0}}
#define Command_init_zero                        {0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define IMUData_count_tag                        1
#define IMUData_acc_x_tag                        2
#define IMUData_acc_y_tag                        3
#define IMUData_acc_z_tag                        4
#define IMUData_gyro_x_tag                       5
#define IMUData_gyro_y_tag                       6
#define IMUData_gyro_z_tag                       7
#define Status_state_tag                         1
#define Status_temperature_tag                   2
#define Status_missed_samples_tag                3
#define Status_error_code_tag                    4
#define DeviceInfo_unique_id_tag                 1
#define DeviceInfo_firmware_tag                  2
#define Command_state_tag                        1
#define Command_filter_config_tag                2
#define Command_data_rate_tag                    3
#define Command_acc_range_tag                    4
#define Command_gyro_range_tag                   5

/* Struct field encoding specification for nanopb */
#define IMUData_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT64,   count,             1) \
X(a, STATIC,   SINGULAR, FLOAT,    acc_x,             2) \
X(a, STATIC,   SINGULAR, FLOAT,    acc_y,             3) \
X(a, STATIC,   SINGULAR, FLOAT,    acc_z,             4) \
X(a, STATIC,   SINGULAR, FLOAT,    gyro_x,            5) \
X(a, STATIC,   SINGULAR, FLOAT,    gyro_y,            6) \
X(a, STATIC,   SINGULAR, FLOAT,    gyro_z,            7)
#define IMUData_CALLBACK NULL
#define IMUData_DEFAULT NULL

#define Status_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   state,             1) \
X(a, STATIC,   SINGULAR, FLOAT,    temperature,       2) \
X(a, STATIC,   SINGULAR, UINT32,   missed_samples,    3) \
X(a, STATIC,   SINGULAR, UINT32,   error_code,        4)
#define Status_CALLBACK NULL
#define Status_DEFAULT NULL

#define DeviceInfo_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FIXED_LENGTH_BYTES, unique_id,         1) \
X(a, STATIC,   SINGULAR, FIXED_LENGTH_BYTES, firmware,          2)
#define DeviceInfo_CALLBACK NULL
#define DeviceInfo_DEFAULT NULL

#define Command_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   state,             1) \
X(a, STATIC,   SINGULAR, UINT32,   filter_config,     2) \
X(a, STATIC,   SINGULAR, UINT32,   data_rate,         3) \
X(a, STATIC,   SINGULAR, UINT32,   acc_range,         4) \
X(a, STATIC,   SINGULAR, UINT32,   gyro_range,        5)
#define Command_CALLBACK NULL
#define Command_DEFAULT NULL

extern const pb_msgdesc_t IMUData_msg;
extern const pb_msgdesc_t Status_msg;
extern const pb_msgdesc_t DeviceInfo_msg;
extern const pb_msgdesc_t Command_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define IMUData_fields &IMUData_msg
#define Status_fields &Status_msg
#define DeviceInfo_fields &DeviceInfo_msg
#define Command_fields &Command_msg

/* Maximum encoded size of messages (where known) */
#define Command_size                             15
#define DeviceInfo_size                          21
#define IMUData_size                             41
#define MESSAGES_PB_H_MAX_SIZE                   IMUData_size
#define Status_size                              17

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
